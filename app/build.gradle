apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration["compile_sdk_version"]

    defaultConfig {
        applicationId "com.hklouch.githubrepos4cs"
        minSdkVersion globalConfiguration["min_sdk_version"]
        targetSdkVersion globalConfiguration["target_sdk_version"]
        versionCode 1
        multiDexEnabled true
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def appDependencies = rootProject.ext.appDependencies
    def appTestDependencies = rootProject.ext.appTestDependencies

    def withoutSupportFragment = { exclude group: 'com.android.support', module: 'support-fragment' }

    implementation project(':Domain')
    implementation project(':Data')

    implementation appDependencies.kotlin
    implementation appDependencies.rxAndroid
    implementation appDependencies.rxKotlin
    implementation appDependencies.javaxInject
    implementation appDependencies.constraintLayout
    implementation appDependencies.androidAnnotations
    implementation appDependencies.androidSupportV4
    implementation appDependencies.androidSupportV13
    implementation appDependencies.appCompatV7
    implementation appDependencies.supportRecyclerView
    implementation appDependencies.supportDesign
    implementation appDependencies.timber
    implementation appDependencies.glide
    implementation appDependencies.dagger
    implementation appDependencies.daggerSupport, withoutSupportFragment

    implementation appDependencies.archRuntime
    implementation appDependencies.archExtensions

    kapt appDependencies.daggerCompiler
    kapt appDependencies.daggerProcessor

    def withoutCompatAndAnnotations = {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-compat'
    }

    //Test
    testImplementation appTestDependencies.jUnit
    testImplementation appTestDependencies.archTesting
    testImplementation appTestDependencies.mockito
    testImplementation appTestDependencies.truth
    androidTestImplementation(appTestDependencies.espressoCore, withoutCompatAndAnnotations)
    androidTestImplementation(appTestDependencies.androidRunner, withoutCompatAndAnnotations)
    androidTestImplementation(appTestDependencies.androidRules, withoutCompatAndAnnotations)
    androidTestImplementation(appTestDependencies.espressoIntents, withoutCompatAndAnnotations)
    androidTestImplementation(appTestDependencies.espressoContrib) {
        exclude module: 'support-compat'
        exclude module: 'appcompat'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'design'
        exclude module: 'support-core-utils'
        exclude module: 'support-fragment'

    }
}
